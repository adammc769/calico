# Core application settings
ENVIRONMENT=development

# Backend Configuration
# Use 'local' for direct Playwright (no MCP required, easier setup)
# Use 'mcp' for MCP backend (requires playwright-mcp service)
BACKEND_MODE=local

# Celery broker/result configuration
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/1

# Database connection strings
# For local development, comment out DATABASE_URL to use SQLite (default)
# For Docker/Production, uncomment DATABASE_URL to use PostgreSQL
POSTGRES_DB=calico
POSTGRES_USER=calico
POSTGRES_PASSWORD=calico
#DATABASE_URL=postgresql+psycopg2://calico:calico@postgres:5432/calico

# SQLite path (used when DATABASE_URL is not set or commented out)
SQLITE_PATH=./data/calico.db

# Browser Configuration (using Patchright - enhanced Playwright fork)
# Patchright provides better bot detection evasion than standard Playwright
# See HOW_TO_CONFIGURE_BROWSER.md for complete configuration guide
PLAYWRIGHT_BROWSER=chromium              # Browser engine: chromium | firefox | webkit
PLAYWRIGHT_HEADLESS=true                 # Headless mode: true = no visible window, false = visible browser
PLAYWRIGHT_STEALTH_MODE=true             # Anti-detection: true = stealth scripts enabled (31 flags), false = disabled (6 flags)
PLAYWRIGHT_TIMEOUT=30000                 # Default timeout in milliseconds (30 seconds)
PLAYWRIGHT_USE_PATCHRIGHT=true           # Use Patchright fork: true = enhanced evasion, false = standard Playwright

# OpenAI API configuration (REQUIRED for GPT features)
OPENAI_API_KEY=YOUR_API_KEY

# GPT Model Configuration
GPT_MODEL=gpt-4o
GPT_TEMPERATURE=0.2
GPT_MAX_TOKENS=4000

# Automation Settings
MAX_TURNS=8
TIMEOUT=10
MAX_RETRIES=3

# Monitoring Settings
ENABLE_TELEMETRY=true
LOG_LEVEL=INFO
SAVE_SCREENSHOTS=true

# Hugging Face API configuration (optional)
HuggingFace_API_KEY=YOUR_API_KEY

# Google Cloud Vision (OCR) configuration
GOOGLE_APPLICATION_CREDENTIALS=YOUR_PATH_TO_CREDENTIALS_JSON
GOOGLE_CLOUD_PROJECT=YOUR_PROJECT_ID
VISION_LANGUAGE_HINTS=en

# Python Backend API Server Configuration
API_SERVER_HOST=0.0.0.0
API_SERVER_PORT=8000
